import tictactoe
import random

# player functions take two parameters
# player_id which is 0 (X) or 1 (O)
# curr_board which is a list of 9 strings ex: [" ", "O", "X"...]
# then the function returns the index of the slot the player will play in

def get_open_spots(curr_board : [int]) -> [int]:
    return [x for x in range(len(curr_board)) if curr_board[x] == " "]

def random_player(player_id : int, curr_board : [int]) -> int:
    # First, find all the open spots
    open_spots = get_open_spots(curr_board)
    # Then, choose a random one to play in
    return random.choice(open_spots)

# tictactoe.play_game([tictactoe.human_player, random_player], should_display=True, start_player=0)

# If there's a spot open that would win the game, we always play there
def always_pick_winner(player_id : int, curr_board : [int]) -> int:
    #if you can play the winning move, do so
    #otherwise, play random_player
    open_spots = get_open_spots(curr_board)
    # for each of these open spaces, try to make the move, and look at the state of the new_board
    for spot in open_spots:
        new_board = curr_board.copy()
        new_board[spot] = tictactoe.player_strings[player_id]
        state = tictactoe.game_state(new_board)
        if state == player_id:
            return spot

    return random.choice(open_spots)



x_wins, o_wins, draws = tictactoe.run_simulations([random_player, always_pick_winner], 1000,
    x_always_starts=False)
print("X won " + str(x_wins) + " times")
print("O won " + str(o_wins) + " times")
print("It was a draw " + str(draws) + " times")
